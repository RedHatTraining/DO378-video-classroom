WEBVTT

00:00:00.000 --> 00:00:04.410
In this exercise which has no
particular script to prepare it,

00:00:04.410 --> 00:00:07.695
we're going to deploy microservice to

00:00:07.695 --> 00:00:11.460
OpenShift Container Platform
using our credentials,

00:00:11.460 --> 00:00:15.960
the credentials that have been
provided to us at lab creation time.

00:00:15.960 --> 00:00:19.290
So let's just simply start by

00:00:19.290 --> 00:00:22.770
having a look at our ocp
configuration file because

00:00:22.770 --> 00:00:26.070
we are going to need that or the lab from

00:00:26.070 --> 00:00:29.880
page to be able to access the web console.

00:00:29.880 --> 00:00:34.880
The ocp4 configuration
file is the /usr/local/

00:00:34.880 --> 00:00:37.310
etc/ocp4.config.

00:00:37.310 --> 00:00:40.340
And it literally just contains
a couple of values of which

00:00:40.340 --> 00:00:44.870
the last 2 are going
to be essential to us.

00:00:44.870 --> 00:00:49.520
We're also going to need the
application domain name,

00:00:49.520 --> 00:00:54.800
which is the last part of
the NEXUS_SERVER variable

00:00:54.800 --> 00:00:58.445
or if you can simply just look
at the WILDCARD_DOMAIN variable.

00:00:58.445 --> 00:01:00.635
This is the domain we're going to need.

00:01:00.635 --> 00:01:02.135
So let's copy this,

00:01:02.135 --> 00:01:07.400
open a new tab in the browser
and type https:// console-

00:01:07.400 --> 00:01:15.440
openshift-console. and paste
the application domain next to it.

00:01:15.440 --> 00:01:17.225
When the page loads,

00:01:17.225 --> 00:01:22.280
we're going to go back to our
terminal and copy the username.

00:01:22.280 --> 00:01:24.800
Of course, for you it's
going to be a different one,

00:01:24.800 --> 00:01:27.770
pasting it into the username field

00:01:27.770 --> 00:01:32.345
and we are also going to copy the password,

00:01:32.345 --> 00:01:38.820
pasting it into the password
field. There we go.

00:01:39.160 --> 00:01:42.650
So the Developer perspective
is now the default one,

00:01:42.650 --> 00:01:45.650
but we are going to slip back

00:01:45.650 --> 00:01:48.650
to the Administrator perspective
just for a moment to

00:01:48.650 --> 00:01:51.920
see the Home Projects view, where we can

00:01:51.920 --> 00:01:55.970
click on Create Project
to create a new one.

00:01:55.970 --> 00:01:59.105
What we're going to call it is

00:01:59.105 --> 00:02:04.160
deploy-service-
your actual username.

00:02:04.160 --> 00:02:07.010
So again, if you don't
have it on a clipboard,

00:02:07.010 --> 00:02:11.885
just go and copy and paste
it into the dialog

00:02:11.885 --> 00:02:15.530
So this last part has to
be your username because

00:02:15.530 --> 00:02:19.355
this platform is used by many
different people at the same time

00:02:19.355 --> 00:02:22.835
and this makes sure that
the project name is unique.

00:02:22.835 --> 00:02:26.555
If you want, you can enter a
display name and description.

00:02:26.555 --> 00:02:28.205
You can leave them empty.

00:02:28.205 --> 00:02:31.175
There we go. We've created it.

00:02:31.175 --> 00:02:34.145
Let's switch back to the
Developer perspective.

00:02:34.145 --> 00:02:38.925
So going back here and
clicking on Add button,

00:02:38.925 --> 00:02:42.385
we will select from image,

00:02:42.385 --> 00:02:45.775
from Container Image, here
in the list of choices.

00:02:45.775 --> 00:02:51.925
So it's this little square and is the
Image name from external registry,

00:02:51.925 --> 00:02:56.740
we're going to enter quay.io/redhattraining

00:02:56.740 --> 00:03:03.490
/quarkus-expense:1.11.

00:03:03.490 --> 00:03:09.190
The image is checked for presence
and accessibility as we type.

00:03:09.190 --> 00:03:12.340
So don't panic if it shows

00:03:12.340 --> 00:03:15.805
unavailable before you have finished
typing the complete name.

00:03:15.805 --> 00:03:18.835
If you do not see a
validated response here,

00:03:18.835 --> 00:03:20.035
as you finish typing,

00:03:20.035 --> 00:03:22.170
double-check it for typos.

00:03:22.170 --> 00:03:23.870
Now when scrolling down,

00:03:23.870 --> 00:03:27.305
we have some additional
parameters that we can provide,

00:03:27.305 --> 00:03:30.920
such as choose specific runtime icon.

00:03:30.920 --> 00:03:35.225
If you want to provide
an Application Name,

00:03:35.225 --> 00:03:39.020
we are just going to use
quarkus-expense-app as

00:03:39.020 --> 00:03:44.135
the name and the quarkus-
expense as the component name.

00:03:44.135 --> 00:03:46.835
All the resources that
are generated have this

00:03:46.835 --> 00:03:50.030
as their selected as their name.

00:03:50.030 --> 00:03:53.450
In the types of Resources
that we want to generate,

00:03:53.450 --> 00:03:56.435
we have a choice between a
Deployment and a Deployment Config.

00:03:56.435 --> 00:03:59.630
Deployment config is an
advanced resource that

00:03:59.630 --> 00:04:03.560
allows us a finer control over
certain lifecycle phases.

00:04:03.560 --> 00:04:06.710
So for our purposes, deployment
will be just fine.

00:04:06.710 --> 00:04:09.260
And then scrolling a
little bit further down,

00:04:09.260 --> 00:04:16.309
just make sure that the Create a route
to the application option is checked,

00:04:16.309 --> 00:04:17.720
so do not uncheck it,

00:04:17.720 --> 00:04:19.830
just leave it checked.

00:04:20.050 --> 00:04:26.135
We can access some additional
options here at the bottom,

00:04:26.135 --> 00:04:28.220
let's say Routing, Health
Checks, Deployment

00:04:28.220 --> 00:04:30.815
option, Scaling, Resource Limits, Labels.

00:04:30.815 --> 00:04:34.400
We just start by configuring
Routing a little bit.

00:04:34.400 --> 00:04:38.495
We'll leave the Hostname
to be auto-generated.

00:04:38.495 --> 00:04:41.450
Leave the Path as it is

00:04:41.450 --> 00:04:43.340
but for the Target Port,

00:04:43.340 --> 00:04:46.650
we will select port 8080,

00:04:47.490 --> 00:04:52.045
like this to be receiving the traffic.

00:04:52.045 --> 00:04:54.460
We won't make the route the secure one.

00:04:54.460 --> 00:04:56.785
We'll just leave it as a
plain text one for now

00:04:56.785 --> 00:04:59.125
and once we click Create,

00:04:59.125 --> 00:05:01.885
the application gets created.

00:05:01.885 --> 00:05:03.910
You can see the topology view.

00:05:03.910 --> 00:05:05.380
Right now,

00:05:05.380 --> 00:05:08.965
it turned from light blue to
darker blue which means that the pod

00:05:08.965 --> 00:05:12.325
is actually up and actively running.

00:05:12.325 --> 00:05:16.585
If you have a look at the icon
pointing towards top right,

00:05:16.585 --> 00:05:17.800
if you hover over it,

00:05:17.800 --> 00:05:19.390
it says Open URL.

00:05:19.390 --> 00:05:22.540
Because we have created a
route for this application

00:05:22.540 --> 00:05:26.020
If we click this, it is
opened in a new tab

00:05:26.020 --> 00:05:29.160
and our new Cloud-Native application

00:05:29.160 --> 00:05:31.115
reporting ready state.

00:05:31.115 --> 00:05:35.090
If we want to have a look at
the exposed API endpoints,

00:05:35.090 --> 00:05:40.415
we can simply add a 
swagger-ui URL at the end

00:05:40.415 --> 00:05:43.160
and here they are. Oh! look,

00:05:43.160 --> 00:05:45.425
it's the familiar expenses application.

00:05:45.425 --> 00:05:48.125
So let's unfold the expenses method,

00:05:48.125 --> 00:05:51.515
click Try it out and execute it

00:05:51.515 --> 00:05:55.460
and as we had expected,

00:05:55.460 --> 00:06:00.110
it is the Groceries which you paid
in CASH in the Civilization 6,

00:06:00.110 --> 00:06:02.735
which we paid using a DEBIT_CARD.

00:06:02.735 --> 00:06:06.710
Let's go back to the web console
and review the resources

00:06:06.710 --> 00:06:11.120
that were created using the
new application wizard.

00:06:11.120 --> 00:06:14.990
Clicking the center of our
application's icon will show

00:06:14.990 --> 00:06:19.400
us the deployment that is in
charge of controlling it.

00:06:19.400 --> 00:06:21.860
But in the Details tab over here,

00:06:21.860 --> 00:06:25.025
we can see that it's currently running

00:06:25.025 --> 00:06:33.680
just one pod, is using a RollingUpdate
and has a couple of Labels added to it.

00:06:33.680 --> 00:06:37.730
And it is in a Namespace
called deploy-service,

00:06:37.730 --> 00:06:39.590
followed by my username.

00:06:39.590 --> 00:06:44.165
We can also click the Resources tab
which shows us the related resources.

00:06:44.165 --> 00:06:47.015
So as we said, currently
there's just 1 pod running.

00:06:47.015 --> 00:06:49.910
Note that its name is based on the name of

00:06:49.910 --> 00:06:54.590
the application resource quarkus-
expense and then generated suffix.

00:06:54.590 --> 00:06:58.460
There were no Builds because we
deployed a pre-fabricated image.

00:06:58.460 --> 00:07:01.730
There is a Service though
which exposes 3 ports,

00:07:01.730 --> 00:07:03.335
8778,

00:07:03.335 --> 00:07:06.185
9779 and 8080,

00:07:06.185 --> 00:07:09.950
which is also the one
that we used in the route.

00:07:09.950 --> 00:07:16.085
And the Route section at the very
bottom shows us the hostname

00:07:16.085 --> 00:07:22.130
which we can use to access this application
and optionally some TLS settings.

00:07:22.130 --> 00:07:24.950
So if we click either one of those,

00:07:24.950 --> 00:07:28.925
we can see the details related
to that particular resource

00:07:28.925 --> 00:07:32.765
or we can navigate back and
choose a different one,

00:07:32.765 --> 00:07:34.520
such as a Service,

00:07:34.520 --> 00:07:38.730
which shows us the pods
that correspond to it.

00:07:40.240 --> 00:07:43.970
Or ultimately have a look at the Route

00:07:43.970 --> 00:07:48.679
which shows us the details of
how to access this application.

00:07:48.679 --> 00:07:51.710
The application creation
wizard does create

00:07:51.710 --> 00:07:55.850
some additional resources
sometimes. To find them,

00:07:55.850 --> 00:07:59.180
we can always use the Search option from

00:07:59.180 --> 00:08:06.890
the left menu and select the resource
type from the drop down box here.

00:08:06.890 --> 00:08:12.360
Let's say if you want to
find an ImageStream,

00:08:12.970 --> 00:08:18.155
so that is an ImageStreamTag
belonging to this application.

00:08:18.155 --> 00:08:23.000
We can see that there is an 
ImageStreamTag called quarkus-expense:1.

00:08:23.000 --> 00:08:28.325
11 that is monitoring an
image that we had just deployed.

00:08:28.325 --> 00:08:30.559
Right! Let's clean up after ourselves,

00:08:30.559 --> 00:08:35.285
so just switching back to the
Administrator perspective and using

00:08:35.285 --> 00:08:41.165
the triple dots next to our project
in the Project view screen,

00:08:41.165 --> 00:08:43.919
click on Delete Project,

00:08:44.110 --> 00:08:48.050
retype or copy and paste
the project name into

00:08:48.050 --> 00:08:53.040
the confirmation dialog and click Delete.

00:08:56.830 --> 00:08:59.030
Once the project is gone,

00:08:59.030 --> 00:09:00.230
you can Log out from

00:09:00.230 --> 00:09:04.700
the web console and join us in the
next video where we're going to

00:09:04.700 --> 00:09:07.040
compare and contrast this workflow

00:09:07.040 --> 00:09:12.000
by deploying applications using
Quarkus tooling. See you there.

